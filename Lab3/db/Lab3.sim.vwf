/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2012 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("SIGIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SIGIN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SIGIN";
}

SIGNAL("SIGIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SIGIN";
}

SIGNAL("SIGIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SIGIN";
}

SIGNAL("SIGIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SIGIN";
}

SIGNAL("SIGOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SIGOUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

SIGNAL("SIGOUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

SIGNAL("SIGOUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

SIGNAL("SIGOUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

SIGNAL("SIGOUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

SIGNAL("SIGOUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

SIGNAL("SIGOUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SIGOUT";
}

TRANSITION_LIST("SIGIN[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("SIGIN[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 250.0;
		}
	}
}

TRANSITION_LIST("SIGIN[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 125.0;
			LEVEL 1 FOR 125.0;
		}
	}
}

TRANSITION_LIST("SIGIN[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 62.5;
			LEVEL 1 FOR 62.5;
		}
	}
}

TRANSITION_LIST("SIGOUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.217;
		LEVEL 1 FOR 61.851;
		LEVEL 0 FOR 125.649;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 182.767;
		LEVEL 1 FOR 4.084;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 0.649;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 57.767;
		LEVEL 0 FOR 4.084;
		LEVEL 1 FOR 0.649;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 61.851;
		LEVEL 0 FOR 112.932;
	}
}

TRANSITION_LIST("SIGOUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 261.47;
		LEVEL 1 FOR 0.649;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 61.851;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 58.022;
		LEVEL 1 FOR 3.829;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 0.649;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 61.851;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 61.851;
		LEVEL 1 FOR 113.53;
	}
}

TRANSITION_LIST("SIGOUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 137.472;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 557.767;
		LEVEL 1 FOR 4.085;
		LEVEL 0 FOR 0.648;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 61.852;
		LEVEL 1 FOR 113.176;
	}
}

TRANSITION_LIST("SIGOUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 72.802;
		LEVEL 1 FOR 61.841;
		LEVEL 0 FOR 120.929;
		LEVEL 1 FOR 4.071;
		LEVEL 0 FOR 0.659;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 61.841;
		LEVEL 1 FOR 0.659;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 57.77;
		LEVEL 0 FOR 4.071;
		LEVEL 1 FOR 0.659;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 61.841;
		LEVEL 0 FOR 0.659;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 57.77;
		LEVEL 1 FOR 4.071;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 0.659;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 52.198;
	}
}

TRANSITION_LIST("SIGOUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 74.94;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 187.5;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 58.019;
		LEVEL 0 FOR 3.825;
		LEVEL 1 FOR 0.656;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 61.844;
		LEVEL 0 FOR 363.216;
	}
}

TRANSITION_LIST("SIGOUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 72.727;
		LEVEL 1 FOR 186.852;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 0.648;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 57.987;
		LEVEL 0 FOR 253.865;
		LEVEL 1 FOR 0.648;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 61.852;
		LEVEL 0 FOR 115.421;
	}
}

TRANSITION_LIST("SIGOUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 136.777;
		LEVEL 0 FOR 120.928;
		LEVEL 1 FOR 4.072;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 0.661;
		LEVEL 0 FOR 62.5;
		LEVEL 1 FOR 58.022;
		LEVEL 0 FOR 254.478;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 175.062;
	}
}

DISPLAY_LINE
{
	CHANNEL = "SIGIN";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "SIGIN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SIGIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SIGIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SIGIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "SIGOUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
